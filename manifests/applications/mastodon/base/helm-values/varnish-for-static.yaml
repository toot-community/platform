onload: 
  host: haproxy-onload.haproxy-onload.svc.cluster.local
  port: 8080
  
varnish:
  size: 256M
  removeResponseHeaders:
    - "x-amz-request-id" # hetzner
    - "x-debug-bucket" # hetzner
    - "x-rgw-object-type" # hetzner
    - "x-amz-id-2" # wasabi
    - "x-amz-meta-btime" # wasabi
    - "x-amz-meta-fl-original-last-modified" # wasabi
    - "x-amz-meta-mtime" # wasabi
    - "x-wasabi-cm-reference-id" # wasabi
  
  configuration: |
    |-
    vcl 4.1;
    
    # https://github.com/varnish/toolbox/tree/master/vcls/hit-miss
    include "hit-miss.vcl";
    import dynamic;
    
    backend proxy {
      .host = "{{ .Values.onload.host }}";
      .port = "{{ .Values.onload.port }}";
    }
    
    acl ipv4_only { "0.0.0.0"/0; }

    sub vcl_init {
        new d = dynamic.director(
            port = "{{ .Values.backend.port }}",
            ttl = 60s,
            via = proxy,
            whitelist = ipv4_only
        );
    }
    
    sub vcl_backend_fetch {
      set bereq.http.Host = "{{ .Values.backend.host }}";
    }
    
    sub vcl_deliver {
      # Remove headers that are not needed
      {{ range $header := .Values.varnish.removeResponseHeaders }}
        unset resp.http.{{ $header }};
      {{ end }}
    }
    
    sub vcl_recv {
      set req.backend_hint = d.backend("{{ .Values.backend.host }}");
      
      if (req.url == "/__health") {
          return (synth(200, "OK"));
      }
    }

    sub vcl_synth {
        if (resp.status == 200 && req.url == "/__health") {
            set resp.http.Content-Type = "text/plain";
            set resp.body = "Varnish is healthy\n";
            return (deliver);
        }
    }